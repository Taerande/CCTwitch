rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  		match /timeline/{timelineId}{
      	allow read: if true;
        allow create: if request.auth != null;
      }
    	match /cliplist/{cliplistId}{
      
      	function Authorization(){
        	return request.auth.uid == resource.data.authorId;
        }
      
        function incrementCliplistCount(before, after){
        	return before.authorId == after.authorId &&
          before.authorName == after.authorName &&
          before.color == after.color &&
          before.createdAt == after.createdAt &&
          before.description == after.description &&
          before.isPublic == after.isPublic &&
          before.title == after.title &&
          (before.likeCount != after.likeCount || before.likeUids != after.likeUids || before.clipCount != after.clipCount || before.clipIds != after.clipIds || before.thumbnail_url != after.thumbnail_url)
        }

        allow read : if request.auth.uid in resource.data.likeUids || resource.data.isPublic > 0 || Authorization();
        allow create: if request.auth != null;
        allow update: if Authorization() || incrementCliplistCount(resource.data, request.resource.data);
        allow delete: if Authorization();
        
        
        
        function cliplistData() {
        	return get(/databases/$(database)/documents/cliplist/$(cliplistId)).data
        }
        
        match /clips/{clipId}{
        	allow read : if cliplistData().isPublic > 0 || request.auth != null;
          allow write: if cliplistData().authorId == request.auth.uid;
        }
      }
  }
}